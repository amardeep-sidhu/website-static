<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Oracle on amardeepsidhu.com</title><link>https://amardeepsidhu.com/categories/oracle/</link><description>Recent content in Oracle on amardeepsidhu.com</description><generator>Hugo -- 0.147.9</generator><language>en</language><lastBuildDate>Mon, 28 Jul 2025 08:50:12 +0530</lastBuildDate><atom:link href="https://amardeepsidhu.com/categories/oracle/index.xml" rel="self" type="application/rss+xml"/><item><title>SQL Performance - Tune It or Buy It ?</title><link>https://amardeepsidhu.com/blog/2025/07/sql-performance-tune-it-or-buy-it/</link><pubDate>Mon, 28 Jul 2025 08:50:12 +0530</pubDate><guid>https://amardeepsidhu.com/blog/2025/07/sql-performance-tune-it-or-buy-it/</guid><description>&lt;p>I was thinking about this while sitting in &lt;a href="https://viveklsharma.wordpress.com/">Vivek&lt;/a>&amp;rsquo;s session at &lt;a href="https://www.aioug.org/ocyatra/2025">OCYatra&lt;/a> in Gurgaon. He was talking about the techniques one can use to optimize badly performing SQLs. But there does exist the other side of this story i.e. throwing hardware at a performance problem to fix it. Of course, it works till a point only and it can&amp;rsquo;t solve every damn performance problem out there. But it is relatively easier to do (costs money, though) and depending upon where you are hosting your workloads, can be quicker too. You see CPU usage going up or users complaining, simple thing to do is to throw more cores at the database. If the system is CPU starved, it is going to give some temporary relief and you can control the situation. Same can be the case with the storage IOPS. In some extreme cases, you could even migrate the database to a more powerful hardware. With systems like Exadata being around which can make even a bad SQL do fairly well, this lever becomes even more powerful. But is it sustainable or is it the right way to deal with these kind of issues?&lt;/p></description></item><item><title>Decoding OCI's Database Deployment Options - Part 2</title><link>https://amardeepsidhu.com/blog/2025/07/decoding-ocis-database-deployment-options-part2/</link><pubDate>Sun, 20 Jul 2025 19:03:12 +0530</pubDate><guid>https://amardeepsidhu.com/blog/2025/07/decoding-ocis-database-deployment-options-part2/</guid><description>&lt;p>In &lt;a href="https://amardeepsidhu.com/blog/2025/06/decoding-ocis-database-deployment-options-part1/">part1&lt;/a>, I summarized the options available for DB deployment on OCI and described the Base Database Service. In this post I will talk about the second group i.e. Exadata platform based services in detail and explore the possible deployment scenarios. When it comes to Exadata based options, it get a little complex as there are multiple ways to do it. To reiterate, there are two ways the deployment can be done. One is in the public cloud and another one is the private cloud (Exadata Cloud@Customer aka ExaCC) where the hardware is deployed in the customer&amp;rsquo;s data center. Let&amp;rsquo;s now explore the different offerings.&lt;/p></description></item></channel></rss>